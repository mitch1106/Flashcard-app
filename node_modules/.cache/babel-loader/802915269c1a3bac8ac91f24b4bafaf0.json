{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mitch\\\\Thinkful\\\\flashcard-app\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\decks\\\\EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport DeckForm from \"./DeckForm\";\nimport BreadCrumb from \"../home/BreadCrumb\";\nimport { readDeck, updateDeck } from \"../../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck() {\n  _s();\n\n  const initialFormState = {\n    name: \"\",\n    description: \"\"\n  };\n  const [deck, setDeck] = useState({ ...initialFormState\n  });\n  const history = useHistory();\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    async function loadDeck() {\n      try {\n        const loadedDeck = await readDeck(deckId);\n        setDeck(loadedDeck);\n      } catch (error) {\n        if (error.name !== \"AbortError\") {\n          throw error;\n        }\n      }\n    }\n\n    loadDeck();\n  }, [deckId]);\n\n  const handleChange = ({\n    target\n  }) => {\n    setDeck({ ...deck,\n      [target.name]: target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    async function updateDeckData() {\n      await updateDeck(deck);\n      history.push(`/decks/${deck.id}`);\n    }\n\n    updateDeckData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BreadCrumb, {\n      link: `/decks/${deckId}/edit`,\n      linkName: deck.name,\n      pageName: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Edit Deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row w-100\",\n        children: /*#__PURE__*/_jsxDEV(DeckForm, {\n          formData: deck,\n          handleChange: handleChange,\n          handleSubmit: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deckId}`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary mr-1\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: handleSubmit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditDeck, \"1jGYtOijhGQN7t2dW4t8WyhAerE=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["C:/Users/mitch/Thinkful/flashcard-app/Project_Flashcards_Qualified_1/src/Layout/decks/EditDeck.js"],"names":["React","useState","useEffect","Link","useParams","useHistory","DeckForm","BreadCrumb","readDeck","updateDeck","EditDeck","initialFormState","name","description","deck","setDeck","history","deckId","loadDeck","loadedDeck","error","handleChange","target","value","handleSubmit","event","preventDefault","updateDeckData","push","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport DeckForm from \"./DeckForm\";\r\nimport BreadCrumb from \"../home/BreadCrumb\";\r\nimport { readDeck, updateDeck } from \"../../utils/api/index\";\r\n\r\nfunction EditDeck() {\r\n\r\n    const initialFormState = {\r\n        name:\"\",\r\n        description:\"\"\r\n    }\r\n\r\n    const [deck, setDeck] = useState({...initialFormState});\r\n    const history = useHistory();\r\n    const { deckId } = useParams();\r\n\r\n    useEffect(() => {\r\n        async function loadDeck() {\r\n            try {\r\n                const loadedDeck = await readDeck(deckId);\r\n                setDeck(loadedDeck);\r\n            } catch (error) {\r\n                if (error.name!==\"AbortError\") {\r\n                    throw error;\r\n                }\r\n            }\r\n        }\r\n        loadDeck();\r\n    }, [deckId]);\r\n\r\n    const handleChange = ({target}) => {\r\n        setDeck({\r\n            ...deck,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        async function updateDeckData() {\r\n                await updateDeck(deck);\r\n                history.push(`/decks/${deck.id}`);\r\n        }\r\n        updateDeckData();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <BreadCrumb link={`/decks/${deckId}/edit`} linkName={deck.name} pageName={\"Edit\"} />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h1>Edit Deck</h1>\r\n                    <br />\r\n                </div>\r\n                <div className=\"row w-100\">\r\n            \r\n                    <DeckForm formData={deck} handleChange={handleChange} handleSubmit={handleSubmit}/>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                    <Link to={`/decks/${deckId}`}><button className=\"btn btn-secondary mr-1\">Cancel</button></Link>\r\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={handleSubmit}>Save</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default EditDeck;\r\n"]},"metadata":{},"sourceType":"module"}