{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mitch\\\\Thinkful\\\\flashcard-app\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Cards\\\\CreateCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport CardForm from './CardForm';\nimport BreadCrumb from '../Home/BreadCrumb';\nimport { readDeck, createCard } from '../../utils/api/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewCard() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const initialFormState = {\n    front: \"\",\n    back: \"\",\n    deckId: deckId,\n    id: 0\n  };\n  const [deck, setDeck] = useState([]);\n  const [formData, setFormData] = useState({ ...initialFormState\n  });\n\n  const handleChange = ({\n    target\n  }) => {\n    setFormData({ ...formData,\n      [target.name]: target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    async function cardCreate() {\n      try {\n        await createCard(deckId, formData);\n        setFormData({ ...initialFormState\n        });\n      } catch (error) {\n        if (error.name !== \"AbortError\") {\n          throw error;\n        }\n      }\n    }\n\n    cardCreate();\n  };\n\n  useEffect(() => {\n    async function loadDeck() {\n      const loadedDeck = await readDeck(deckId);\n      setDeck(() => loadedDeck);\n    }\n\n    loadDeck();\n  }, [deckId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BreadCrumb, {\n      link: `decks/${deck.id}`,\n      linkName: deck.name,\n      pageName: \"Add Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [deck.name, \":Add Card\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(CardForm, {\n        formData: formData,\n        handleChange: handleChange,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `decks/${deck.id}`,\n        className: \"btn btn-secondary mr-1\",\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: handleSubmit,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewCard, \"Amqflo8P7/FFdsrXctnh5iFM7nw=\", false, function () {\n  return [useParams];\n});\n\n_c = NewCard;\n;\nexport default NewCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCard\");","map":{"version":3,"sources":["C:/Users/mitch/Thinkful/flashcard-app/Project_Flashcards_Qualified_1/src/Layout/Cards/CreateCard.js"],"names":["React","useState","useEffect","Link","useParams","CardForm","BreadCrumb","readDeck","createCard","NewCard","deckId","initialFormState","front","back","id","deck","setDeck","formData","setFormData","handleChange","target","name","value","handleSubmit","event","preventDefault","cardCreate","error","loadDeck","loadedDeck"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport CardForm from './CardForm';\r\nimport BreadCrumb from '../Home/BreadCrumb';\r\nimport { readDeck, createCard } from '../../utils/api/index';\r\n\r\nfunction NewCard() {\r\n    const { deckId } = useParams();\r\n\r\n    const initialFormState={\r\n        front:\"\",\r\n        back:\"\",\r\n        deckId: deckId,\r\n        id: 0,\r\n    };\r\n     \r\n    const [ deck, setDeck ]= useState([]);\r\n    const [formData, setFormData]= useState({...initialFormState});\r\n\r\n    const handleChange= ({ target }) => {\r\n        setFormData({\r\n            ...formData,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        async function cardCreate() {\r\n            try{\r\n                await createCard(deckId,formData);\r\n                setFormData({...initialFormState});\r\n            } catch (error) {\r\n               if(error.name !== \"AbortError\") {\r\n                   throw error;\r\n               }\r\n            }\r\n        }\r\n      cardCreate();\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function loadDeck() {\r\n            const loadedDeck= await readDeck(deckId);\r\n            setDeck(() => loadedDeck);\r\n        }\r\n        loadDeck();\r\n    },[deckId])\r\n\r\n    return (\r\n        <div>\r\n            <BreadCrumb link={`decks/${deck.id}`} linkName={deck.name} pageName={\"Add Card\"} />\r\n              <div className='row'>\r\n                  <h2>{deck.name}:Add Card</h2>\r\n                  <br />\r\n                  <br />\r\n               </div>\r\n              <div className='row'>\r\n                 <CardForm formData={formData} handleChange={handleChange} handleSubmit={handleSubmit} />\r\n                 <br />\r\n              </div>\r\n              <div className='row'>\r\n                  <Link to={`decks/${deck.id}`} className= 'btn btn-secondary mr-1'>Done</Link>\r\n                  <button type=\"submit\" className= 'btn btn-primary' onClick={handleSubmit}>Save</button>\r\n              </div>\r\n        </div>\r\n    )\r\n};\r\nexport default NewCard;"]},"metadata":{},"sourceType":"module"}