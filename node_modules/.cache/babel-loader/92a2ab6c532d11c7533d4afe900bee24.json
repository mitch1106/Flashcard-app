{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/mitch/Thinkful/flashcard-app/Project_Flashcards_Qualified_1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/mitch/Thinkful/flashcard-app/Project_Flashcards_Qualified_1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:/Users/mitch/Thinkful/flashcard-app/Project_Flashcards_Qualified_1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/mitch/Thinkful/flashcard-app/Project_Flashcards_Qualified_1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/mitch/Thinkful/flashcard-app/Project_Flashcards_Qualified_1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link,useParams}from'react-router-dom';import CardForm from'./CardForm';import BreadCrumb from'../Home/BreadCrumb';import{readDeck,createCard}from'../../utils/api/index';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function NewCard(){var _useParams=useParams(),deckId=_useParams.deckId;var initialFormState={front:\"\",back:\"\",deckId:deckId,id:0};var _useState=useState([]),_useState2=_slicedToArray(_useState,2),deck=_useState2[0],setDeck=_useState2[1];var _useState3=useState(_objectSpread({},initialFormState)),_useState4=_slicedToArray(_useState3,2),formData=_useState4[0],setFormData=_useState4[1];var handleChange=function handleChange(_ref){var target=_ref.target;setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},target.name,target.value)));};var handleSubmit=function handleSubmit(event){event.preventDefault();function cardCreate(){return _cardCreate.apply(this,arguments);}function _cardCreate(){_cardCreate=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return createCard(deckId,formData);case 3:setFormData(_objectSpread({},initialFormState));_context.next=10;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);if(!(_context.t0.name!==\"AbortError\")){_context.next=10;break;}throw _context.t0;case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,6]]);}));return _cardCreate.apply(this,arguments);}cardCreate();};useEffect(function(){function loadDeck(){return _loadDeck.apply(this,arguments);}function _loadDeck(){_loadDeck=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var loadedDeck;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return readDeck(deckId);case 2:loadedDeck=_context2.sent;setDeck(function(){return loadedDeck;});case 4:case\"end\":return _context2.stop();}}},_callee2);}));return _loadDeck.apply(this,arguments);}loadDeck();},[deckId]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(BreadCrumb,{link:\"decks/\".concat(deck.id),linkName:deck.name,pageName:\"Add Card\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[deck.name,\":Add Card\"]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(CardForm,{formData:formData,handleChange:handleChange,handleSubmit:handleSubmit}),/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(Link,{to:\"decks/\".concat(deck.id),className:\"btn btn-secondary mr-1\",children:\"Done\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",onClick:handleSubmit,children:\"Save\"})]})]});};export default NewCard;","map":{"version":3,"sources":["C:/Users/mitch/Thinkful/flashcard-app/Project_Flashcards_Qualified_1/src/Layout/Cards/CreateCard.js"],"names":["React","useState","useEffect","Link","useParams","CardForm","BreadCrumb","readDeck","createCard","NewCard","deckId","initialFormState","front","back","id","deck","setDeck","formData","setFormData","handleChange","target","name","value","handleSubmit","event","preventDefault","cardCreate","loadDeck","loadedDeck"],"mappings":"q6BAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,IAAT,CAAeC,SAAf,KAAgC,kBAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,oBAAvB,CACA,OAASC,QAAT,CAAmBC,UAAnB,KAAqC,uBAArC,C,wFAEA,QAASC,CAAAA,OAAT,EAAmB,CACf,eAAmBL,SAAS,EAA5B,CAAQM,MAAR,YAAQA,MAAR,CAEA,GAAMC,CAAAA,gBAAgB,CAAC,CACnBC,KAAK,CAAC,EADa,CAEnBC,IAAI,CAAC,EAFc,CAGnBH,MAAM,CAAEA,MAHW,CAInBI,EAAE,CAAE,CAJe,CAAvB,CAOA,cAAyBb,QAAQ,CAAC,EAAD,CAAjC,wCAAQc,IAAR,eAAcC,OAAd,eACA,eAA+Bf,QAAQ,kBAAKU,gBAAL,EAAvC,yCAAOM,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,YAAY,CAAE,QAAdA,CAAAA,YAAc,MAAgB,IAAbC,CAAAA,MAAa,MAAbA,MAAa,CAChCF,WAAW,gCACJD,QADI,wBAENG,MAAM,CAACC,IAFD,CAEQD,MAAM,CAACE,KAFf,GAAX,CAIH,CALD,CAOA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC5BA,KAAK,CAACC,cAAN,GAD4B,QAGbC,CAAAA,UAHa,wIAG5B,yKAEclB,CAAAA,UAAU,CAACE,MAAD,CAAQO,QAAR,CAFxB,QAGQC,WAAW,kBAAKP,gBAAL,EAAX,CAHR,oFAKU,YAAMU,IAAN,GAAe,YALzB,iHAH4B,6CAa9BK,UAAU,GACX,CAdD,CAgBAxB,SAAS,CAAC,UAAM,SACGyB,CAAAA,QADH,kIACZ,8KAC4BpB,CAAAA,QAAQ,CAACG,MAAD,CADpC,QACUkB,UADV,gBAEIZ,OAAO,CAAC,iBAAMY,CAAAA,UAAN,EAAD,CAAP,CAFJ,wDADY,2CAKZD,QAAQ,GACX,CANQ,CAMP,CAACjB,MAAD,CANO,CAAT,CAQA,mBACI,oCACI,KAAC,UAAD,EAAY,IAAI,iBAAWK,IAAI,CAACD,EAAhB,CAAhB,CAAsC,QAAQ,CAAEC,IAAI,CAACM,IAArD,CAA2D,QAAQ,CAAE,UAArE,EADJ,cAEM,aAAK,SAAS,CAAC,KAAf,wBACI,sBAAKN,IAAI,CAACM,IAAV,eADJ,cAEI,aAFJ,cAGI,aAHJ,GAFN,cAOM,aAAK,SAAS,CAAC,KAAf,wBACG,KAAC,QAAD,EAAU,QAAQ,CAAEJ,QAApB,CAA8B,YAAY,CAAEE,YAA5C,CAA0D,YAAY,CAAEI,YAAxE,EADH,cAEG,aAFH,GAPN,cAWM,aAAK,SAAS,CAAC,KAAf,wBACI,KAAC,IAAD,EAAM,EAAE,iBAAWR,IAAI,CAACD,EAAhB,CAAR,CAA8B,SAAS,CAAE,wBAAzC,kBADJ,cAEI,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAE,iBAAjC,CAAmD,OAAO,CAAES,YAA5D,kBAFJ,GAXN,GADJ,CAkBH,EACD,cAAed,CAAAA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport CardForm from './CardForm';\r\nimport BreadCrumb from '../Home/BreadCrumb';\r\nimport { readDeck, createCard } from '../../utils/api/index';\r\n\r\nfunction NewCard() {\r\n    const { deckId } = useParams();\r\n\r\n    const initialFormState={\r\n        front:\"\",\r\n        back:\"\",\r\n        deckId: deckId,\r\n        id: 0,\r\n    };\r\n     \r\n    const [ deck, setDeck ]= useState([]);\r\n    const [formData, setFormData]= useState({...initialFormState});\r\n\r\n    const handleChange= ({ target }) => {\r\n        setFormData({\r\n            ...formData,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        async function cardCreate() {\r\n            try{\r\n                await createCard(deckId,formData);\r\n                setFormData({...initialFormState});\r\n            } catch (error) {\r\n               if(error.name !== \"AbortError\") {\r\n                   throw error;\r\n               }\r\n            }\r\n        }\r\n      cardCreate();\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function loadDeck() {\r\n            const loadedDeck= await readDeck(deckId);\r\n            setDeck(() => loadedDeck);\r\n        }\r\n        loadDeck();\r\n    },[deckId])\r\n\r\n    return (\r\n        <div>\r\n            <BreadCrumb link={`decks/${deck.id}`} linkName={deck.name} pageName={\"Add Card\"} />\r\n              <div className='row'>\r\n                  <h2>{deck.name}:Add Card</h2>\r\n                  <br />\r\n                  <br />\r\n               </div>\r\n              <div className='row'>\r\n                 <CardForm formData={formData} handleChange={handleChange} handleSubmit={handleSubmit} />\r\n                 <br />\r\n              </div>\r\n              <div className='row'>\r\n                  <Link to={`decks/${deck.id}`} className= 'btn btn-secondary mr-1'>Done</Link>\r\n                  <button type=\"submit\" className= 'btn btn-primary' onClick={handleSubmit}>Save</button>\r\n              </div>\r\n        </div>\r\n    )\r\n};\r\nexport default NewCard;"]},"metadata":{},"sourceType":"module"}