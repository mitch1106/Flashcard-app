{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mitch\\\\Thinkful\\\\flashcard-app\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Study\\\\StudyCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory, Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction StudyCard({\n  cards\n}) {\n  _s();\n\n  const initialState = {\n    onBack: false,\n    currentCard: 0\n  };\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [studySession, setStudySession] = useState({ ...initialState\n  });\n\n  const handleNext = () => {\n    //Go to next card until the last card is reached\n    if (studySession.currentCard < cards.length - 1) {\n      setStudySession({ ...studySession,\n        currentCard: studySession.currentCard + 1,\n        onBack: false\n      });\n    } else {\n      const confirm = window.confirm(\"Restart cards? Click cancel to return to the home page.\");\n\n      if (confirm) {\n        setStudySession(initialState);\n      } else {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const handleFlip = () => {\n    if (studySession.onBack) {\n      setStudySession({ ...studySession,\n        onBack: false\n      });\n    } else {\n      setStudySession({ ...studySession,\n        onBack: true\n      });\n    }\n  };\n\n  if (cards.length > 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card w-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"card-title\",\n            children: [\"Card \", studySession.currentCard + 1, \" of \", cards.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text font-weight-lighter\",\n            children: studySession.onBack ? cards[studySession.currentCard].back : cards[studySession.currentCard].front\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary mr-1\",\n            onClick: handleFlip,\n            children: \"Flip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), studySession.onBack && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleNext,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Not enough cards.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row my-2\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You need at least 3 cards to study. This deck has \", cards, \" cards.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deckId}/cards/new`,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"bi bi-plus mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 33\n            }, this), \"Add Card\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(StudyCard, \"zd25K9wcmHm0DB3zKZEmPED8sV0=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = StudyCard;\nexport default StudyCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudyCard\");","map":{"version":3,"sources":["C:/Users/mitch/Thinkful/flashcard-app/Project_Flashcards_Qualified_1/src/Layout/Study/StudyCard.js"],"names":["React","useState","useHistory","Link","useParams","StudyCard","cards","initialState","onBack","currentCard","deckId","history","studySession","setStudySession","handleNext","length","confirm","window","push","handleFlip","back","front"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useHistory, Link, useParams } from \"react-router-dom\";\r\n\r\n\r\nfunction StudyCard({cards}) {\r\n    const initialState = {\r\n        onBack: false,\r\n        currentCard: 0,\r\n    };\r\n\r\n    const { deckId } = useParams();\r\n    const history = useHistory();\r\n    const [studySession, setStudySession] = useState({...initialState});\r\n   \r\n    \r\n    const handleNext = () => {\r\n        //Go to next card until the last card is reached\r\n        if (studySession.currentCard < cards.length - 1) {\r\n            setStudySession({\r\n                ...studySession,\r\n                currentCard: studySession.currentCard + 1,\r\n                onBack: false,\r\n            })\r\n        } \r\n        else {\r\n            const confirm = window.confirm(\"Restart cards? Click cancel to return to the home page.\");\r\n            if(confirm) {\r\n                setStudySession(initialState);\r\n            } else {\r\n                history.push(\"/\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const handleFlip = () => {\r\n        if (studySession.onBack) {\r\n            setStudySession({\r\n                ...studySession,\r\n                onBack: false\r\n            }) \r\n        } else {\r\n            setStudySession({\r\n                ...studySession,\r\n                onBack: true\r\n            })\r\n        }\r\n    }\r\n    \r\n   \r\n    if (cards.length > 2) {\r\n        return (\r\n           <div className=\"container\">\r\n            <div className=\"card w-100\">\r\n                <div className=\"card-body\">\r\n                    <h4 className=\"card-title\">\r\n                        Card {studySession.currentCard + 1} of {cards.length}\r\n                    </h4>\r\n                    <p className=\"card-text font-weight-lighter\">\r\n                        {studySession.onBack \r\n                        ? cards[studySession.currentCard].back\r\n                        : cards[studySession.currentCard].front\r\n                        }                      \r\n                    </p>\r\n                    <button className=\"btn btn-secondary mr-1\" onClick={handleFlip}>Flip</button>\r\n                    {studySession.onBack && (\r\n                        <button className=\"btn btn-primary\" onClick={handleNext}>Next</button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n            <h3>Not enough cards.</h3>\r\n            <div className=\"row my-2\">\r\n                <p>You need at least 3 cards to study. This deck has {cards} cards.</p>\r\n            </div>\r\n            <div className=\"row\">\r\n                    <Link to={`/decks/${deckId}/cards/new`}>\r\n                            <button className=\"btn btn-primary\">\r\n                                <i class=\"bi bi-plus mr-1\"></i>\r\n                                Add Card\r\n                            </button>\r\n                        </Link>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StudyCard;"]},"metadata":{},"sourceType":"module"}