{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mitch\\\\Thinkful\\\\flashcard-app\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\cards\\\\EditCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport CardForm from \"./CardForm\";\nimport BreadCrumb from \"../home/BreadCrumb\";\nimport { readDeck, readCard, updateCard } from \"../../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditCard() {\n  _s();\n\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const history = useHistory();\n  const [deck, setDeck] = useState({});\n  const [card, setCard] = useState({}); //load deck and card\n\n  useEffect(() => {\n    const loadDeck = async () => setDeck(await readDeck(deckId));\n\n    loadDeck();\n\n    const loadCard = async () => setCard(await readCard(cardId));\n\n    loadCard();\n  }, [deckId, cardId]); //create change handler for form\n\n  const handleChange = ({\n    target\n  }) => {\n    setCard({ ...card,\n      [target.name]: target.value\n    });\n  }; //create submit handler to save edits\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    async function updateCardData() {\n      try {\n        await updateCard(card);\n        history.push(`decks/${deckId}`);\n      } catch (error) {\n        if (error.name !== \"AbortError\") {\n          throw error;\n        }\n      }\n    }\n\n    updateCardData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BreadCrumb, {\n      link: `decks/${deckId}`,\n      linkName: `Deck ${deck.name}`,\n      pageName: `Edit Card ${cardId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row w-100\",\n      children: /*#__PURE__*/_jsxDEV(CardForm, {\n        formData: card,\n        handleChange: handleChange,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row w-100\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `decks/${deckId}`,\n        className: \"btn btn-secondary mr-1\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: handleSubmit,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditCard, \"2iByk8zOcsP/HN3yPrlOxdwx1hY=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["C:/Users/mitch/Thinkful/flashcard-app/Project_Flashcards_Qualified_1/src/Layout/cards/EditCard.js"],"names":["React","useState","useEffect","Link","useParams","useHistory","CardForm","BreadCrumb","readDeck","readCard","updateCard","EditCard","deckId","cardId","history","deck","setDeck","card","setCard","loadDeck","loadCard","handleChange","target","name","value","handleSubmit","event","preventDefault","updateCardData","push","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport CardForm from \"./CardForm\";\r\nimport BreadCrumb from \"../home/BreadCrumb\";\r\nimport { readDeck, readCard, updateCard } from \"../../utils/api/index\";\r\n\r\nfunction EditCard() {\r\n    const { deckId, cardId }= useParams();\r\n    const history = useHistory();\r\n    const [deck, setDeck] = useState({});\r\n    const [card, setCard] = useState({});\r\n\r\n    //load deck and card\r\n    useEffect(() => {\r\n        const loadDeck = async () => setDeck(await readDeck(deckId));\r\n        loadDeck();\r\n        const loadCard = async () => setCard(await readCard(cardId));\r\n        loadCard();\r\n    }, [deckId, cardId])\r\n\r\n    //create change handler for form\r\n    const handleChange = ({ target }) => {\r\n        setCard({\r\n            ...card,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    //create submit handler to save edits\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        async function updateCardData() {\r\n            try {\r\n                await updateCard(card);\r\n                history.push(`decks/${deckId}`);\r\n            } catch (error) {\r\n                if (error.name!== \"AbortError\"){\r\n                    throw error;\r\n                }\r\n            }\r\n        }\r\n        updateCardData();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <BreadCrumb link={`decks/${deckId}`} linkName={`Deck ${deck.name}`} pageName={`Edit Card ${cardId}`} />\r\n            <div className= \"row w-100\">\r\n                <CardForm formData={card} handleChange={handleChange} handleSubmit={handleSubmit} />\r\n\r\n            </div>\r\n            <div className= \"row w-100\">\r\n                <Link to ={`decks/${deckId}`} className=\"btn btn-secondary mr-1\">Cancel</Link>\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={handleSubmit}>Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default EditCard;"]},"metadata":{},"sourceType":"module"}